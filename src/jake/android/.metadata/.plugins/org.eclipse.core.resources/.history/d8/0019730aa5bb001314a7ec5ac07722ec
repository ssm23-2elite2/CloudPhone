package com.ssm232.elite.cloudphonetest;

import java.util.List;

import android.app.Service;
import android.content.Intent;
import android.graphics.PixelFormat;
import android.hardware.Camera;
import android.os.IBinder;
import android.util.Log;
import android.view.Gravity;
import android.view.View;
import android.view.WindowManager;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.RelativeLayout.LayoutParams;

import com.ssm232.elite.cloudphonetest.camera.CameraPreview;
import com.ssm232.elite.cloudphonetest.camera.ResizableCameraPreview;

public class CloudPhoneService extends Service implements AdapterView.OnItemSelectedListener {

	private final String LOG = "CloudPhoneService";
	private ResizableCameraPreview mPreview;
	private ArrayAdapter<String> mAdapter;
	private RelativeLayout mLayout;
	private int mCameraId = 0;

	@Override
	public IBinder onBind(Intent intent) {
		return null;
	}

	@Override
	@Deprecated
	public void onStart(Intent intent, int startId) {
		Log.d(LOG, "onStart");
		super.onStart(intent, startId);

		// Spinner for preview sizes
		Spinner spinnerSize = new Spinner(this);
		mAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item);
		mAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
		spinnerSize.setAdapter(mAdapter);
		spinnerSize.setOnItemSelectedListener(this);

		// Spinner for camera ID
		Spinner spinnerCamera = new Spinner(this);
		ArrayAdapter<String> adapter;
		adapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item);
		adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
		spinnerCamera.setAdapter(adapter);
		spinnerCamera.setOnItemSelectedListener(this);
		adapter.add("0");
		adapter.add("1");
		adapter.add("2");

		mPreview = new ResizableCameraPreview(this, mCameraId, CameraPreview.LayoutMode.FitToParent, false);
		LayoutParams previewLayoutParams = new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
		mLayout.addView(mPreview, 0, previewLayoutParams);

		mAdapter.clear();
		mAdapter.add("Auto");
		List<Camera.Size> sizes = mPreview.getSupportedPreivewSizes();
		for (Camera.Size size : sizes) {
			mAdapter.add(size.width + " x " + size.height);
		}
		
		//LayoutParams previewLayoutParams = new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
		WindowManager.LayoutParams params = new WindowManager.LayoutParams(
				WindowManager.LayoutParams.WRAP_CONTENT,
				WindowManager.LayoutParams.WRAP_CONTENT,
				WindowManager.LayoutParams.TYPE_SYSTEM_OVERLAY,//TYPE_SYSTEM_ALERT,//TYPE_SYSTEM_OVERLAY,
				WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE | WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE |
				WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN, //will cover status bar as well!!!
				PixelFormat.TRANSLUCENT);
		params.gravity = Gravity.LEFT | Gravity.TOP;
		params.setTitle("");
		WindowManager wm = (WindowManager) getSystemService(WINDOW_SERVICE);
		wm.addView(spinnerSize, params);
		wm.addView(spinnerCamera, params);
		wm.addView(mPreview, params);
	}

	@Override
	public void onDestroy() {
		Log.d(LOG, "onDestroy");
		super.onDestroy();

		if(mPreview != null) {
			((WindowManager) getSystemService(WINDOW_SERVICE)).removeView(mPreview);
			mPreview = null;
		}
	}

	@Override
	public void onItemSelected(AdapterView<?> parent, View view, int position,
			long id) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onNothingSelected(AdapterView<?> parent) {
		// TODO Auto-generated method stub
		
	}
}
